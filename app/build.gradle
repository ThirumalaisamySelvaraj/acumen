plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "androidx.navigation.safeargs"
    id("dagger.hilt.android.plugin")
    id("kotlin-parcelize")
}
apply plugin: 'kotlin-kapt'

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.acumenapp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding{
        enabled = true
    }
/*
    viewBinding{
        enabled =true
        }*/
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

dependencies {

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def lifecycle_version = "2.5.0-alpha02"
    def room_version = "2.4.1"
    def nav_version_ktx = "2.1.0-alpha06"

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")

    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")

    //Room
    implementation("androidx.room:room-runtime:$room_version")
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    //CoRoutines Dependencies
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"

//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    //card View
    implementation 'androidx.cardview:cardview:1.0.0'

    //RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.3.0-alpha01'

    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.6.1'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'
    implementation 'androidx.multidex:multidex:2.0.1'

    //Dagger 2
    implementation 'com.google.dagger:dagger-android:2.35.1'
    implementation 'com.google.dagger:dagger-android-support:2.35.1' // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.35.1'
    kapt 'com.google.dagger:dagger-compiler:2.38.1'

    //Navigation component libraries
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version_ktx"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version_ktx"

    //RxJava
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    //Dagger Hilt
    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")

    // Work Manager
    // Kotlin + coroutines
    def work_version = "2.7.1"
    implementation("androidx.work:work-runtime-ktx:$work_version")

    //Paging Library
    def paging_version = "3.0.0-alpha12"
    implementation "androidx.paging:paging-runtime:$paging_version"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    // Tests
    //Test - Local Unit Tests
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'com.google.truth:truth:1.1.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'

    //Mockito -starts
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation "org.mockito:mockito-inline:3.11.2"
    //Mockito - ends
    debugImplementation "androidx.fragment:fragment-testing:1.4.1"

    //Instrument test
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.google.truth:truth:1.1.2'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test:rules:1.4.1-alpha03'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    //Mockito -starts instrument
    androidTestImplementation 'org.mockito:mockito-core:3.11.2'
    //Mockito -ends instrument

    //Hilt Testing
    // For instrumented tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:2.34.1-beta"
    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.38.1")
    //Hilt - Testing Ends

}